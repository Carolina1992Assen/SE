 
    '''for i in range(1, ly):
        for i in range(1, lx):
            if x[i - 1] == y[j - 1] and len(x[i - 1]) == 1 and len(y[j - 1]) == 1:
                d[i, j] = 0
            if x[i - 1] == y[j - 1] and len(x[i - 1]) > 1 or len(y[j - 1]) > 1:
                deletion = d[i - 1, j] + is_vowel(x[i - 1])
                insertion = d[i, j - 1] + is_vowel(y[j - 1])
                substitution = d[i - 1, j - 1]
            if x[i - 1] != y[j - 1]:
                deletion = d[i - 1, j] + is_vowel(x[i - 1])
                insertion = d[i, j - 1] + is_vowel(y[j - 1])
                substitution = d[i - 1, j - 1] + 1
            
            
            d[i, j] = min(deletion, substitution, insertion)
  
            
            
    return d[i][j]
        
            
             


def main():
    
    for line in sys.stdin:
        line = line.strip()
        line = line.split()
        w1 = line[0]
        w2 = line[1]
        print(w1, w2, ls(w1, w2), line[2])
        
if __name__=='__main__':
    main()'''
    
    
    
    import sys
import numpy as np 

def is_vowel(letter):
    l = 0
    if letter in 'aeiouAEIOU':
        l = 0.5
    else:
        l = 1
    return l
    
    
def is_same(x, y, i, j):
    if y[i - 1] == x[j - 1]:
        cost = 0
    elif y[i - 1] != x[j - 1]:
        cost = 1
    return cost
    

def ls(x, y):
    if x == y:
        return 0
    elif len(x) == 0:
        return len(y)
    elif len(y) == 0:
        return len(x)

    lx = len(x) + 1
    ly = len(y) + 1

    d = np.zeros((lx, ly))

    for i in range(len(d[0])):
        d[0][i] = i
    for j in range(len(d)):
        d[j][0] = j


    cost = 1
    for j in range(1, ly):
        for i in range(1, lx):
            if y[j-1] == x[i-1]:
                cost = 0
            elif y[j-1] != x[i-1]:
                cost = 1
                
            insdel1 = 
            d[i][j] = min(d[i, j - 1] + 1, d[i - 1, j] + 1, d[i - 1, j - 1] + cost)
            
            print(y[j-1], x[i-1])
            
    print(d)
         
    

ls('carlijn', 'nelson')      
 
